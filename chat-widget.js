(()=>{"use strict";var __webpack_modules__={362:()=>{eval('\n;// ./src/utils/generate-classname.ts\nfunction generateClassName(baseName) {\n    return baseName + "_" + Math.random().toString(36).substr(2, 9);\n}\n\n;// ./src/utils/classname.ts\n\nvar classNames = {\n    chatWidgetContainer: generateClassName("chat-widget-container"),\n    aiChatContainer: generateClassName("ai-chat-container"),\n    chatWidgetToggle: generateClassName("chat-widget-toggle"),\n    aiChatToggle: generateClassName("ai-chat-toggle"),\n    aiChatToggleIcon: generateClassName("ai-chat-toggle-icon"),\n    aiChatToggleIconWrapper: generateClassName("ai-chat-toggle-icon-wrapper"),\n    aiChatMain: generateClassName("ai-chat-main"),\n    aiChatHeader: generateClassName("ai-chat-header"),\n    aiChatHeaderUser: generateClassName("ai-chat-header-user"),\n    aiChatHeaderAvatar: generateClassName("ai-chat-header-avatar"),\n    aiChatHeaderName: generateClassName("ai-chat-header-name"),\n    aiChatDropdown: generateClassName("ai-chat-dropdown"),\n    aiChatDropdownMenu: generateClassName("ai-chat-dropdown-menu"),\n    aiChatDropdownItem: generateClassName("ai-chat-dropdown-item"),\n    aiChatMessages: generateClassName("ai-chat-messages"),\n    aiChatMessage: generateClassName("ai-chat-message"),\n    aiChatMessageIncoming: generateClassName("ai-chat-message-incoming"),\n    aiChatMessageOutgoing: generateClassName("ai-chat-message-outgoing"),\n    aiChatMessageContent: generateClassName("ai-chat-message-content"),\n    aiChatMessageText: generateClassName("ai-chat-message-text"),\n    aiChatMessageTime: generateClassName("ai-chat-message-time"),\n    aiChatInput: generateClassName("ai-chat-input"),\n    aiChatInputForm: generateClassName("ai-chat-input-form"),\n    aiChatInputField: generateClassName("ai-chat-input-field"),\n    aiChatInputButton: generateClassName("ai-chat-input-button"),\n    aiChatPowered: generateClassName("ai-chat-powered"),\n    aiChatCompany: generateClassName("ai-chat-company"),\n    aiChatSendBtn: generateClassName("ai-chat-send-btn"),\n    aiChatBotAvatar: generateClassName("ai-chat-bot-avatar"),\n    aiChatUserAvatar: generateClassName("ai-chat-user-avatar"),\n    visible: generateClassName("visible"),\n    open: generateClassName("open"),\n    //\n};\n\n;// ./src/components/ChatWidget/ChatWidget.ts\n\nfunction ChatWidget(config) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    var currentTime = new Date().toLocaleTimeString([], {\n        hour: "2-digit",\n        minute: "2-digit",\n    });\n    return "\\n      <!DOCTYPE html>\\n        <html lang=\\"en\\">\\n          <body>\\n            <div class=".concat(classNames.aiChatContainer, ">\\n              <div class=\\"").concat(classNames.aiChatMain, "\\">\\n                <div class=\\"").concat(classNames.aiChatHeader, "\\">\\n                  <div class=\\"").concat(classNames.aiChatHeaderUser, "\\">\\n                  ").concat(((_a = config.chatWindow) === null || _a === void 0 ? void 0 : _a.botMessage.showAvatar)\n        ? "<img\\n                          src=\\"".concat((_b = config.chatWindow) === null || _b === void 0 ? void 0 : _b.botMessage.avatarSrc, "\\"\\n                          class=\\"").concat(classNames.aiChatHeaderAvatar, "\\"\\n                          alt=\\"Contact\\"\\n                        >")\n        : "", "\\n                    <h5 class=\\"").concat(classNames.aiChatHeaderName, "\\">").concat((_c = config.chatWindow) === null || _c === void 0 ? void 0 : _c.botMessage.name, "</h5>\\n                  </div>\\n                  <div class=\\"").concat(classNames.aiChatDropdown, "\\">\\n                  <svg fill=\\"#000000\\" width=\\"20px\\" height=\\"20px\\" viewBox=\\"0 0 24 24\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path d=\\"M12,10a2,2,0,1,1-2,2A2,2,0,0,1,12,10ZM4,14a2,2,0,1,0-2-2A2,2,0,0,0,4,14Zm16-4a2,2,0,1,0,2,2A2,2,0,0,0,20,10Z\\"/></svg>\\n                    <ul class=\\"").concat(classNames.aiChatDropdownMenu, "\\">\\n                    \\n                      <li><a class=\\"").concat(classNames.aiChatDropdownItem, "\\" id=\\"toggleDirection\\" href=\\"#\\">Switch</a></li>\\n                    </ul>\\n                  </div>\\n                </div>\\n  \\n                <div class=\\"").concat(classNames.aiChatMessages, "\\" id=\\"chatBox\\">\\n                             <div class=\\"").concat(classNames.aiChatMessage, " ").concat(classNames.aiChatMessageIncoming, "\\" >\\n                ").concat(((_d = config.chatWindow) === null || _d === void 0 ? void 0 : _d.welcomeMessage)\n        ? "\\n                \\n                    ".concat(((_e = config.chatWindow) === null || _e === void 0 ? void 0 : _e.botMessage.showAvatar)\n            ? "<img\\n                    src=\\"".concat((_f = config.chatWindow) === null || _f === void 0 ? void 0 : _f.botMessage.avatarSrc, "\\"\\n                    class=\\"").concat(classNames.aiChatBotAvatar, "\\"\\n                    alt=\\"Contact\\"\\n                  >")\n            : "", "\\n                    <div class=\\"").concat(classNames.aiChatMessageContent, "\\">\\n                      <p class=\\"").concat(classNames.aiChatMessageText, "\\">\\n                        ").concat((_g = config.chatWindow) === null || _g === void 0 ? void 0 : _g.welcomeMessage, "\\n                      </p>\\n                      <small class=\\"").concat(classNames.aiChatMessageTime, "\\">").concat(currentTime, "</small>\\n                \\n                  </div>\\n                ")\n        : "", "\\n                </div>\\n  \\n                  \\n                </div>\\n  \\n                <div class=\\"").concat(classNames.aiChatInput, "\\">\\n                  <form id=\\"chatForm\\" class=\\"").concat(classNames.aiChatInputForm, "\\">\\n                    <input\\n                      id=\\"chatInput\\"\\n                      type=\\"text\\"\\n                      class=\\"").concat(classNames.aiChatInputField, "\\"\\n                      placeholder=\\"").concat((_h = config.chatWindow) === null || _h === void 0 ? void 0 : _h.textInput.placeholder, "\\"\\n                    />\\n                    <button class=\\"").concat(classNames.aiChatInputButton, "\\" type=\\"submit\\">            \\n                      <svg width=\\"25px\\" height=\\"25px\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n                        <path class=\\"").concat(classNames.aiChatSendBtn, "\\" d=\\"M11.5003 12H5.41872M5.24634 12.7972L4.24158 15.7986C3.69128 17.4424 3.41613 18.2643 3.61359 18.7704C3.78506 19.21 4.15335 19.5432 4.6078 19.6701C5.13111 19.8161 5.92151 19.4604 7.50231 18.7491L17.6367 14.1886C19.1797 13.4942 19.9512 13.1471 20.1896 12.6648C20.3968 12.2458 20.3968 11.7541 20.1896 11.3351C19.9512 10.8529 19.1797 10.5057 17.6367 9.81135L7.48483 5.24303C5.90879 4.53382 5.12078 4.17921 4.59799 4.32468C4.14397 4.45101 3.77572 4.78336 3.60365 5.22209C3.40551 5.72728 3.67772 6.54741 4.22215 8.18767L5.24829 11.2793C5.34179 11.561 5.38855 11.7019 5.407 11.8459C5.42338 11.9738 5.42321 12.1032 5.40651 12.231C5.38768 12.375 5.34057 12.5157 5.24634 12.7972Z\\" stroke=\\"#000000\\" stroke-width=\\"2\\" stroke-linecap=\\"round\\" stroke-linejoin=\\"round\\"/>\\n                      </svg>\\n                    </button>\\n                  </form>\\n                  <div class=\\"").concat(classNames.aiChatPowered, "\\">\\n                  Powered by <span class=\\"").concat(classNames.aiChatCompany, "\\">QKIT Software</span>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </body>\\n        </html>\\n  \\n  \\n      ");\n}\n\n;// ./src/components/ToggleButton/ToggleButton.ts\n\nfunction ToggleButton(config) {\n    var _a, _b;\n    var toggleBtnIconOpen = ((_a = config.button) === null || _a === void 0 ? void 0 : _a.customIconSrc)\n        ? "<img src=".concat((_b = config.button) === null || _b === void 0 ? void 0 : _b.customIconSrc, " class=\\"").concat(classNames.aiChatToggleIconWrapper, "\\" alt=\\"icon\\"/>")\n        : "<svg class=\\"".concat(classNames.aiChatToggleIconWrapper, "\\" viewBox=\\"0 0 24 24\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path class=\\"").concat(classNames.aiChatToggleIcon, "\\" d=\\"M12 2C6.486 2 2 6.486 2 12v4.143C2 17.167 2.897 18 4 18h1a1 1 0 0 0 1-1v-5.143a1 1 0 0 0-1-1h-.908C4.648 6.987 7.978 4 12 4s7.352 2.987 7.908 6.857H19a1 1 0 0 0-1 1V18c0 1.103-.897 2-2 2h-2v-1h-4v3h6c2.206 0 4-1.794 4-4 1.103 0 2-.833 2-1.857V12c0-5.514-4.486-10-10-10z\\"/></svg>");\n    var toggleBtnIconClose = "<svg class=\\"".concat(classNames.aiChatToggleIconWrapper, "\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path class=\\"").concat(classNames.aiChatToggleIcon, "\\" fill-rule=\\"evenodd\\" clip-rule=\\"evenodd\\" d=\\"M19.207 6.207a1 1 0 0 0-1.414-1.414L12 10.586 6.207 4.793a1 1 0 0 0-1.414 1.414L10.586 12l-5.793 5.793a1 1 0 1 0 1.414 1.414L12 13.414l5.793 5.793a1 1 0 0 0 1.414-1.414L13.414 12l5.793-5.793z\\" fill=\\"#000000\\"/></svg>");\n    return {\n        toggleBtnIconOpen: toggleBtnIconOpen,\n        toggleBtnIconClose: toggleBtnIconClose,\n    };\n}\n\n;// ./src/utils/merge-config.ts\nfunction mergeConfigs(target, source, fallback) {\n    for (var key in fallback) {\n        if (fallback.hasOwnProperty(key)) {\n            if (typeof fallback[key] === "object" && !Array.isArray(fallback[key])) {\n                target[key] = source[key] || {};\n                mergeConfigs(target[key], source[key] || {}, fallback[key]);\n            }\n            else {\n                target[key] = source[key] !== undefined ? source[key] : fallback[key];\n            }\n        }\n    }\n}\n\n;// ./src/config/chat-widget.config.ts\n\nfunction ChatWidgetConfig() {\n    var finalConfig = {};\n    var apiConfig = {};\n    var defaultConfig = {\n        direction: "ltr",\n        button: {\n            position: "right",\n            backgroundColor: "#3B81F6",\n            horizontal: 20,\n            bottom: 20,\n            size: "medium",\n            iconColor: "white",\n            customIconSrc: "https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/svg/google-messages.svg",\n        },\n        chatWindow: {\n            welcomeMessage: "Hello! This is custom welcome message",\n            backgroundColor: "#ffffff",\n            height: 700,\n            width: 400,\n            fontSize: 16,\n            poweredByTextColor: "#303235",\n            botMessage: {\n                name: "QKIT CHAT AI",\n                backgroundColor: "#f7f8ff",\n                textColor: "#303235",\n                showAvatar: true,\n                avatarSrc: "https://raw.githubusercontent.com/zahidkhawaja/langchain-chat-nextjs/main/public/parroticon.png",\n            },\n            userMessage: {\n                backgroundColor: "#3B81F6",\n                textColor: "#ffffff",\n                showAvatar: true,\n                avatarSrc: "https://raw.githubusercontent.com/zahidkhawaja/langchain-chat-nextjs/main/public/usericon.png",\n            },\n            textInput: {\n                placeholder: "Type your question",\n                backgroundColor: "#ffffff",\n                textColor: "#303235",\n                sendButtonColor: "#3B81F6",\n            },\n        },\n    };\n    mergeConfigs(finalConfig, apiConfig, defaultConfig);\n    return finalConfig;\n}\n\n;// ./src/styles/chat-widget.style.ts\n\nfunction ChatWidgetStyle(config) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15;\n    var horizontal = (_a = config.button) === null || _a === void 0 ? void 0 : _a.position;\n    return "\\n        #".concat(classNames.chatWidgetContainer, " {\\n          position: fixed;\\n          z-index: 9999;\\n          width:").concat((_b = config.chatWindow) === null || _b === void 0 ? void 0 : _b.width, "px;\\n          height: ").concat((_c = config.chatWindow) === null || _c === void 0 ? void 0 : _c.height, "px;\\n          ").concat(horizontal, ":").concat((_d = config.button) === null || _d === void 0 ? void 0 : _d.horizontal, "px;\\n          bottom: ").concat(((_e = config.button) === null || _e === void 0 ? void 0 : _e.size) === "medium"\n        ? ((_g = (_f = config.button) === null || _f === void 0 ? void 0 : _f.bottom) !== null && _g !== void 0 ? _g : 0) + 60 + "px"\n        : ((_j = (_h = config.button) === null || _h === void 0 ? void 0 : _h.bottom) !== null && _j !== void 0 ? _j : 0) + 76 + "px", ";\\n          font-size:").concat((_k = config.chatWindow) === null || _k === void 0 ? void 0 : _k.fontSize, "px;\\n        }\\n  \\n        @media screen and (max-width: 768px) {\\n          #").concat(classNames.chatWidgetContainer, " {\\n            width: 100% !important;\\n            height: 100% !important;\\n            right: 0 !important;\\n            bottom: 0 !important;\\n            border-radius: 0 !important;\\n          }\\n  \\n          #").concat(classNames.chatWidgetToggle, ".").concat(classNames.open, "{\\n          top:10px !important;\\n          ").concat(config.direction === "ltr" ? "right" : "left", ":20px !important;\\n          }\\n\\n          .").concat(classNames.aiChatDropdown, " {\\n        ").concat(config.direction === "ltr" ? "margin-right" : "margin-left", ":65px !important;\\n        }\\n  \\n          .").concat(classNames.aiChatContainer, " {\\n            width: 100% !important;\\n            height: 100% !important;\\n            border-radius: 0 !important;\\n          }\\n  \\n          .").concat(classNames.aiChatHeader, " {\\n            border-radius: 0 !important;\\n          }\\n  \\n          .").concat(classNames.aiChatInput, " {\\n            border-radius: 0 !important;\\n          }\\n        }\\n  \\n        #").concat(classNames.chatWidgetContainer, " {\\n        transition: transform 0.3s ease-out, opacity 0.3s ease-out;\\n        transform: translate(20px, 20px);\\n        opacity: 0;\\n        }\\n  \\n        #").concat(classNames.chatWidgetContainer, ".").concat(classNames.visible, " {\\n          transform: translate(0, 0);\\n          opacity: 1;\\n        }\\n  \\n        #").concat(classNames.chatWidgetToggle, " {\\n          position: fixed;\\n          z-index: 10000;\\n          width:").concat(((_l = config.button) === null || _l === void 0 ? void 0 : _l.size) === "medium" ? "48px" : "64px", ";\\n          height: ").concat(((_m = config.button) === null || _m === void 0 ? void 0 : _m.size) === "medium" ? "48px" : "64px", ";\\n          border-radius:100%;\\n          background-color: ").concat((_o = config.button) === null || _o === void 0 ? void 0 : _o.backgroundColor, ";\\n          ").concat(horizontal, ": ").concat((_p = config.button) === null || _p === void 0 ? void 0 : _p.horizontal, "px;\\n          bottom: ").concat((_q = config.button) === null || _q === void 0 ? void 0 : _q.bottom, "px;\\n         }\\n  \\n          #").concat(classNames.chatWidgetToggle, " {\\n          transition: transform 0.3s ease-out;\\n          }\\n  \\n          #").concat(classNames.chatWidgetToggle, ".").concat(classNames.open, " {\\n            transform: rotate(180deg);\\n          }\\n  \\n         .").concat(classNames.aiChatToggle, "{\\n         display:flex;\\n         align-items:center;\\n         justify-content:center;\\n         color:white;\\n         }\\n  \\n        .").concat(classNames.aiChatToggleIcon, "{\\n        fill:").concat((_r = config.button) === null || _r === void 0 ? void 0 : _r.iconColor, ";\\n        }\\n  \\n        .").concat(classNames.aiChatToggleIconWrapper, "{\\n        height:").concat(((_s = config.button) === null || _s === void 0 ? void 0 : _s.size) === "medium" ? "30px" : "40px", ";\\n        width:").concat(((_t = config.button) === null || _t === void 0 ? void 0 : _t.size) === "medium" ? "30px" : "40px", ";\\n        border-radius:100%;\\n        }\\n  \\n        .").concat(classNames.aiChatContainer, " {\\n          width: ").concat((_u = config.chatWindow) === null || _u === void 0 ? void 0 : _u.width, "px;\\n          height: ").concat((_v = config.chatWindow) === null || _v === void 0 ? void 0 : _v.height, "px;\\n          background-color: white;\\n          font-family: \\"Poppins\\", system-ui;\\n          box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\\n          border-radius: 10px;\\n          direction:").concat(config === null || config === void 0 ? void 0 : config.direction, "\\n        }\\n  \\n        .").concat(classNames.aiChatMain, " {\\n          display: flex;\\n          flex-direction: column;\\n          height: 100%;\\n        }\\n  \\n        .").concat(classNames.aiChatHeader, " {\\n          padding: 1rem;\\n          border-bottom: 1px solid #dee2e6;\\n          display: flex;\\n          align-items: center;\\n          justify-content: space-between;\\n          background-color:").concat((_w = config.button) === null || _w === void 0 ? void 0 : _w.backgroundColor, ";\\n          border-top-left-radius: 10px;\\n          border-top-right-radius: 10px;\\n        }\\n  \\n       \\n        .").concat(classNames.aiChatHeaderUser, " {\\n          display: flex;\\n          align-items: center;\\n        }\\n  \\n        .").concat(classNames.aiChatHeaderAvatar, " {\\n          width: 40px;\\n          height: 40px;\\n          border-radius: 50%;\\n         ").concat(config.direction === "rtl"\n        ? "margin-left: 10px;"\n        : "margin-right: 10px;", "\\n        }\\n  \\n        .").concat(classNames.aiChatHeaderName, " {\\n          margin: 0;\\n          font-size: 1.25rem;\\n     \\n        }\\n  \\n        .").concat(classNames.aiChatDropdown, " {\\n          cursor: pointer;\\n          position: relative;\\n        }\\n  \\n        .").concat(classNames.aiChatDropdownMenu, " {\\n          display: none;\\n          position: absolute;\\n          right: 0;\\n          background-color: #fff;\\n          border: 1px solid #dee2e6;\\n          border-radius: 0.25rem;\\n          padding: 0.5rem 0;\\n          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\\n          list-style: none;\\n        }\\n  \\n        .").concat(classNames.aiChatDropdownItem, " {\\n          display: block;\\n          padding: 0.25rem 1rem;\\n          text-decoration: none;\\n          color: #212529;\\n        }\\n  \\n        .").concat(classNames.aiChatDropdownItem, ":hover {\\n          background-color: #f8f9fa;\\n        }\\n  \\n        .").concat(classNames.aiChatMessages, " {\\n          flex-grow: 1;\\n          overflow-y: auto;\\n          overflow-x: hidden;\\n          padding: 1rem;\\n          background-color:").concat((_x = config.chatWindow) === null || _x === void 0 ? void 0 : _x.backgroundColor, ";\\n        }\\n  \\n        .").concat(classNames.aiChatMessages, "::-webkit-scrollbar {\\n            display: none;\\n        }\\n  \\n        .").concat(classNames.aiChatMessage, " {\\n          margin-bottom: 1rem;\\n        }\\n  \\n        .").concat(classNames.aiChatMessageIncoming, " {\\n          display: flex;\\n          justify-content: flex-start;\\n         \\n        }\\n  \\n        .").concat(classNames.aiChatMessageOutgoing, " {\\n          display: flex;\\n          justify-content: flex-end;\\n         \\n        }\\n  \\n        .").concat(classNames.aiChatMessageContent, " {\\n          display: inline-block;\\n          padding: 0.5rem;\\n          border-radius: 0.25rem;\\n          max-width: 80%;\\n           word-break: break-all;\\n        }\\n  \\n        .").concat(classNames.aiChatMessageIncoming, " .").concat(classNames.aiChatMessageContent, " {\\n           background-color:").concat((_z = (_y = config.chatWindow) === null || _y === void 0 ? void 0 : _y.botMessage) === null || _z === void 0 ? void 0 : _z.backgroundColor, ";\\n          color:").concat((_1 = (_0 = config.chatWindow) === null || _0 === void 0 ? void 0 : _0.botMessage) === null || _1 === void 0 ? void 0 : _1.textColor, ";\\n        }\\n  \\n        .").concat(classNames.aiChatMessageOutgoing, " .").concat(classNames.aiChatMessageContent, " {\\n         background-color:").concat((_3 = (_2 = config.chatWindow) === null || _2 === void 0 ? void 0 : _2.userMessage) === null || _3 === void 0 ? void 0 : _3.backgroundColor, ";\\n          color:").concat((_5 = (_4 = config.chatWindow) === null || _4 === void 0 ? void 0 : _4.userMessage) === null || _5 === void 0 ? void 0 : _5.textColor, ";\\n        }\\n  \\n        .").concat(classNames.aiChatMessageText, " {\\n          margin: 0;\\n        }\\n  \\n        .").concat(classNames.aiChatMessageTime, " {\\n          font-size: 0.75rem;\\n          color: #6c757d;\\n        }\\n  \\n        .").concat(classNames.aiChatMessageOutgoing, " .").concat(classNames.aiChatMessageTime, " {\\n          color: rgba(255, 255, 255, 0.75);\\n        }\\n  \\n        .").concat(classNames.aiChatInput, " {\\n          padding: 1rem;\\n          border-top: 1px solid #dee2e6;\\n          background-color:").concat((_6 = config.chatWindow) === null || _6 === void 0 ? void 0 : _6.backgroundColor, ";\\n          display: flex;\\n          align-items: center;\\n          justify-content: center;\\n          flex-direction: column;\\n          border-radius: 0 0 10px 10px;\\n        }\\n  \\n        .").concat(classNames.aiChatInputForm, " {\\n          display: flex;\\n          width: 100%;\\n        }\\n  \\n        .").concat(classNames.aiChatInputField, " {\\n          flex-grow: 1;\\n          padding: 0.5rem;\\n          border: 1px solid #ced4da;\\n          border-radius: 0.25rem 0 0 0.25rem;\\n          font-size:").concat((_7 = config.chatWindow) === null || _7 === void 0 ? void 0 : _7.fontSize, "px;\\n          background-color:").concat((_9 = (_8 = config.chatWindow) === null || _8 === void 0 ? void 0 : _8.textInput) === null || _9 === void 0 ? void 0 : _9.backgroundColor, ";\\n          color:").concat((_11 = (_10 = config.chatWindow) === null || _10 === void 0 ? void 0 : _10.textInput) === null || _11 === void 0 ? void 0 : _11.textColor, ";\\n        }\\n  \\n        .").concat(classNames.aiChatInputButton, " {\\n          background-color: ").concat((_12 = config.button) === null || _12 === void 0 ? void 0 : _12.backgroundColor, ";\\n          color: white;\\n          border: none;\\n          padding: 0.5rem 1rem;\\n          border-radius: 0 0.25rem 0.25rem 0;\\n          cursor: pointer;\\n          ").concat(config.direction === "rtl" ? " transform: rotate(180deg);" : "", "\\n        }\\n  \\n        .").concat(classNames.aiChatPowered, "{\\n        margin-top: 10px;\\n        font-size: 12px;\\n        color:").concat((_13 = config.chatWindow) === null || _13 === void 0 ? void 0 : _13.poweredByTextColor, ";\\n        }\\n  \\n        .").concat(classNames.aiChatCompany, "{\\n        font-weight: 700;\\n        }\\n  \\n        .").concat(classNames.aiChatSendBtn, "{\\n        fill:").concat((_15 = (_14 = config.chatWindow) === null || _14 === void 0 ? void 0 : _14.textInput) === null || _15 === void 0 ? void 0 : _15.sendButtonColor, "\\n        }\\n  \\n        .").concat(classNames.aiChatBotAvatar, "{\\n        height: 36px;\\n        width: 36px;\\n        border-radius: 50%;\\n        ").concat(config.direction === "rtl"\n        ? "margin-left: 6px;"\n        : "margin-right: 6px;", "\\n        }\\n  \\n        .").concat(classNames.aiChatUserAvatar, "{\\n           height: 36px;\\n        width: 36px;\\n        border-radius: 50%;\\n        ").concat(config.direction === "rtl"\n        ? "margin-right: 6px;"\n        : "margin-left: 6px;", "\\n        }\\n  \\n      ");\n}\n\n;// ./src/app.ts\n\n\n\n\n\nvar App = /** @class */ (function () {\n    function App() {\n    }\n    App.initializeApp = function () {\n        var config = ChatWidgetConfig();\n        var styles = ChatWidgetStyle(config);\n        var styleElement = document.createElement("style");\n        styleElement.innerHTML = styles;\n        var appContainer = document.createElement("div");\n        appContainer.id = classNames.chatWidgetContainer;\n        appContainer.style.display = "none";\n        appContainer.innerHTML = ChatWidget(config);\n        var _a = ToggleButton(config), toggleBtnIconClose = _a.toggleBtnIconClose, toggleBtnIconOpen = _a.toggleBtnIconOpen;\n        var toggleButton = document.createElement("div");\n        toggleButton.id = classNames.chatWidgetToggle;\n        toggleButton.className = classNames.aiChatToggle;\n        toggleButton.innerHTML = toggleBtnIconOpen;\n        document.body.appendChild(appContainer);\n        document.head.appendChild(styleElement);\n        document.body.appendChild(toggleButton);\n        attachEventListeners();\n        // Handle click event on the dropdown\n        function toggleDirection() {\n            config.direction = config.direction === "ltr" ? "rtl" : "ltr";\n            // Re-generate toggleDirectionButton cotent\n            var toggleDirectionButton = document.getElementById("toggleDirection");\n            if (toggleDirectionButton) {\n                toggleDirectionButton.innerHTML =\n                    config.direction === "ltr" ? "LTR" : "RTL";\n            }\n            // Re-generate styles\n            var newStyles = ChatWidgetStyle(config);\n            var styleElement = document.querySelector("style");\n            if (styleElement) {\n                styleElement.innerHTML = newStyles;\n            }\n            // Re-generate chat widget HTML\n            var newChatWidgetHTML = ChatWidget(config);\n            // Replace existing chat widget content\n            var appContainer = document.getElementById(classNames.chatWidgetContainer);\n            if (appContainer) {\n                appContainer.innerHTML = newChatWidgetHTML;\n            }\n            // Re-attach event listeners\n            attachEventListeners();\n        }\n        function attachEventListeners() {\n            var _a;\n            // Handle toggle button click event\n            var isVisible = false;\n            toggleButton.addEventListener("click", function () {\n                isVisible = !isVisible;\n                appContainer.style.display = "block";\n                setTimeout(function () {\n                    appContainer.classList.toggle(classNames.visible, isVisible);\n                }, 10);\n                toggleButton.classList.toggle(classNames.open, isVisible);\n                toggleButton.innerHTML = !isVisible\n                    ? toggleBtnIconOpen\n                    : toggleBtnIconClose;\n                if (!isVisible) {\n                    setTimeout(function () {\n                        appContainer.style.display = "none";\n                    }, 300);\n                }\n            });\n            // Handle click event on the dropdown\n            var dropdown = document.querySelector(".".concat(classNames.aiChatDropdown));\n            var dropdownMenu = document.querySelector(".".concat(classNames.aiChatDropdownMenu));\n            dropdown === null || dropdown === void 0 ? void 0 : dropdown.addEventListener("click", function () {\n                if (dropdownMenu instanceof HTMLElement) {\n                    dropdownMenu.style.display =\n                        dropdownMenu.style.display === "block" ? "none" : "block";\n                }\n            });\n            // Handle send button click event\n            (_a = document\n                .getElementById("chatForm")) === null || _a === void 0 ? void 0 : _a.addEventListener("submit", function (event) {\n                event.preventDefault(); // Prevent form submission(page reload)\n                var chatInput = document.getElementById("chatInput");\n                var message = chatInput.value.trim();\n                if (message !== "") {\n                    // Add message to chat box\n                    addMessageToChat(message, "user-message");\n                    // Delete the input value\n                    chatInput.value = "";\n                    // Suppose the system automatically responds (can be replaced by AI chatbot API)\n                    setTimeout(function () {\n                        addMessageToChat("This is an automated response", "bot-message");\n                    }, 500);\n                }\n            });\n            function addMessageToChat(message, className) {\n                var _a, _b;\n                var chatBox = document.getElementById("chatBox");\n                if (!chatBox)\n                    return;\n                var currentTime = new Date().toLocaleTimeString([], {\n                    hour: "2-digit",\n                    minute: "2-digit",\n                });\n                var messageHtml;\n                if (className === "user-message") {\n                    messageHtml = "        \\n                 <div class=\\"".concat(classNames.aiChatMessage, " ").concat(classNames.aiChatMessageOutgoing, "\\">\\n                   <div class=\\"").concat(classNames.aiChatMessageContent, "\\">\\n                     <p class=\\"").concat(classNames.aiChatMessageText, "\\">\\n                       ").concat(message, "                \\n                     </p>\\n                     <small class=\\"").concat(classNames.aiChatMessageTime, "\\">").concat(currentTime, "</small>\\n                   </div>\\n                    ").concat(((_a = config.chatWindow) === null || _a === void 0 ? void 0 : _a.userMessage.showAvatar)\n                        ? "<img\\n                             src=\\"".concat(config.chatWindow.userMessage.avatarSrc, "\\"\\n                             class=\\"").concat(classNames.aiChatUserAvatar, "\\"\\n                             alt=\\"Contact\\"\\n                           >")\n                        : "", "\\n                 </div>\\n           ");\n                }\n                else {\n                    messageHtml = "\\n                 <div class=\\"".concat(classNames.aiChatMessage, " ").concat(classNames.aiChatMessageIncoming, "\\">\\n                 ").concat(((_b = config.chatWindow) === null || _b === void 0 ? void 0 : _b.botMessage.showAvatar)\n                        ? "<img\\n                       src=\\"".concat(config.chatWindow.botMessage.avatarSrc, "\\"\\n                       class=\\"").concat(classNames.aiChatBotAvatar, "\\"\\n                       alt=\\"Contact\\"\\n                     >")\n                        : "", "\\n                   <div class=\\"").concat(classNames.aiChatMessageContent, "\\">\\n                     <p class=\\"").concat(classNames.aiChatMessageText, "\\">").concat(message, "</p>\\n                     <small class=\\"").concat(classNames.aiChatMessageTime, "\\">").concat(currentTime, "</small>\\n                   </div>\\n                 </div>");\n                }\n                chatBox.innerHTML += messageHtml;\n                chatBox.scrollTop = chatBox.scrollHeight;\n            }\n            // Handle toggle direction button click event\n            var toggleDirectionButton = document.getElementById("toggleDirection");\n            if (toggleDirectionButton) {\n                toggleDirectionButton.addEventListener("click", function (event) {\n                    event.preventDefault();\n                    toggleDirection();\n                });\n            }\n        }\n    };\n    return App;\n}());\n\n\n;// ./src/utils/get-token.ts\nfunction getToken() {\n    var scripts = document.getElementsByTagName("script");\n    for (var i = 0; i < scripts.length; i++) {\n        var src = scripts[i].src;\n        if (src.includes("bundle.js")) {\n            var urlParams = new URLSearchParams(new URL(src).search);\n            return urlParams.get("token");\n        }\n    }\n    return null;\n}\n\n;// ./src/index.ts\n\n\nvar token = getToken();\nif (document.readyState === "loading") {\n    document.addEventListener("DOMContentLoaded", App.initializeApp);\n}\nelse {\n    App.initializeApp();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///362\n')}},__webpack_exports__={};__webpack_modules__[362]()})();
